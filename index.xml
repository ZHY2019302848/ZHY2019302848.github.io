<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>ZHY の blog</title>
        <link>https://ZHY2019302848.github.io/</link>
        <description>Recent content on ZHY の blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>ZHY</copyright>
        <lastBuildDate>Tue, 28 Nov 2023 11:02:09 +0800</lastBuildDate><atom:link href="https://ZHY2019302848.github.io/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Mesh</title>
        <link>https://ZHY2019302848.github.io/p/mesh/</link>
        <pubDate>Tue, 28 Nov 2023 11:02:09 +0800</pubDate>
        
        <guid>https://ZHY2019302848.github.io/p/mesh/</guid>
        <description>&lt;h1 id=&#34;清洗urbanbis数据&#34;&gt;清洗UrbanBIS数据&lt;/h1&gt;
&lt;p&gt;把Longhua Qingdao Wuhu Yingrenshi Yuehai五个城市的可用房屋mesh数据以及其对应的材质图片提取出来&lt;/p&gt;
&lt;p&gt;现在有可用的房屋mesh数据862个。&lt;/p&gt;
&lt;h2 id=&#34;本周plan&#34;&gt;本周PLAN&lt;/h2&gt;
&lt;h3 id=&#34;删除无用纹理图片&#34;&gt;删除无用纹理图片&lt;/h3&gt;
&lt;h3 id=&#34;对建筑进行划分&#34;&gt;对建筑进行划分&lt;/h3&gt;
&lt;h3 id=&#34;给之前的building3d建筑加纹理-&#34;&gt;给之前的Building3D建筑加纹理 :（&lt;/h3&gt;
</description>
        </item>
        <item>
        <title>MOT</title>
        <link>https://ZHY2019302848.github.io/p/%E5%AD%A6%E4%B9%A0/</link>
        <pubDate>Thu, 23 Nov 2023 18:31:02 +0800</pubDate>
        
        <guid>https://ZHY2019302848.github.io/p/%E5%AD%A6%E4%B9%A0/</guid>
        <description>&lt;h1 id=&#34;多目标追踪multi-object-tracking&#34;&gt;多目标追踪(Multi-Object-Tracking)&lt;/h1&gt;
&lt;h2 id=&#34;研究背景及意义&#34;&gt;研究背景及意义&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;多目标跟踪(Multiple object tracking，MOT)的主要任务是从给定视频中输出所有目标的运动轨迹，并维持各目标的身份信息(Identity，ID)。其中，跟踪目标可以是行人、车辆或其他对象。&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- 目标检测、特征提取 数据关联 --&gt;
&lt;ol&gt;
&lt;li&gt;视频监控系统的普及： 随着视频监控系统在公共场所、交通系统、工业领域等的广泛应用，需要自动化地对视频中的多个目标进行实时监测和追踪。
 &lt;!-- 配图--&gt;
&lt;/li&gt;
&lt;li&gt;自动驾驶技术的发展： 在自动驾驶领域，多目标追踪对于车辆和行人的准确追踪至关重要，以确保车辆能够安全行驶并适应复杂的交通环境。
 &lt;!-- 配图--&gt;
&lt;/li&gt;
&lt;li&gt;智能交通系统的需求： 对于城市交通管理和规划来说，多目标追踪能够提供实时的交通流量信息、行人流动模式等，帮助改善交通系统的效率和安全性。
 &lt;!-- 配图--&gt;
&lt;/li&gt;
&lt;li&gt;人机交互与辅助技术： 在智能家居、虚拟现实等领域，多目标追踪有助于提供更智能的人机交互和环境感知。
 &lt;!-- 配图--&gt;
&lt;/li&gt;
&lt;li&gt;人工智能与机器学习： 多目标追踪是人工智能和机器学习领域的一个典型问题，解决这一问题涉及到对图像处理、目标检测、时空建模等多个方面的研究，有助于推动计算机视觉和机器学习的发展。
 &lt;!-- 配图--&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;研究难点&#34;&gt;研究难点&lt;/h3&gt;
&lt;p&gt;然而，在复杂场景下进行鲁棒跟踪仍是当前的研究难点，主要体现在以下几个个方面：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;目标变化： 在实际场景中，目标可能经历尺寸、形状、外观等多方面的变化，如遮挡、部分遮挡、光照变化等。这种变化使得目标的外观难以预测，需要算法具有强大的适应性和泛化能力。&lt;/li&gt;
&lt;li&gt;复杂运动： 目标在运动中可能出现快速变化、突然停止、加速等复杂运动模式。这使得算法需要能够准确地捕捉目标的运动状态，并且在快速变化的情况下保持稳定的跟踪性能。&lt;/li&gt;
&lt;li&gt;遮挡和交叉： 多目标追踪中，目标之间可能存在遮挡和交叉的情况。这种情况下，算法需要能够正确地分离和跟踪各个目标，避免混淆。&lt;/li&gt;
&lt;li&gt;非刚性目标： 一些目标可能是非刚性的，比如液体、布料等。这种类型的目标形状难以建模，因此需要算法能够处理非刚性目标的变形和运动。&lt;/li&gt;
&lt;li&gt;环境干扰： 多目标追踪系统通常在真实世界环境中运行，受到各种环境干扰的影响，如雨、雪、光照变化、阴影等。这些因素可能导致传感器数据的不稳定性，增加了目标跟踪的难度。&lt;/li&gt;
&lt;li&gt;大规模目标集合： 在一些应用场景中，可能需要同时跟踪大量目标，如交通监控、人群管理等。这会导致计算复杂度增加，需要高效的多目标跟踪算法来处理大规模目标集合。&lt;/li&gt;
&lt;li&gt;实时性要求： 在一些实时应用中，如自动驾驶、视频监控等，对目标跟踪算法的实时性要求非常高。算法需要在保持高准确性的同时，具备足够的计算效率，以满足实时处理的需求。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;评价指标&#34;&gt;评价指标&lt;/h3&gt;
&lt;h2 id=&#34;经典方法&#34;&gt;经典方法&lt;/h2&gt;
&lt;h3 id=&#34;mot算法分类&#34;&gt;&lt;em&gt;MOT算法分类&lt;/em&gt;&lt;/h3&gt;
&lt;h4 id=&#34;基于sdeseparate-detectionand-embedding范式的方法&#34;&gt;基于SDE(&lt;em&gt;Separate Detectionand Embedding&lt;/em&gt;)范式的方法&lt;/h4&gt;
&lt;h5 id=&#34;离线跟踪算法&#34;&gt;&lt;strong&gt;离线跟踪算法&lt;/strong&gt;&lt;/h5&gt;
&lt;p&gt;离线跟踪可以看成是一个全局优化问题，给定所有视频帧的检测结果，将属于同一目标的检测结果全局关联到一条轨迹中。&lt;/p&gt;
&lt;p&gt;离线跟踪的关键是找到全局最优解。连续能量最小化是一种常用的全局优化方法，旨在将数据关联和轨迹估计整合到能量函数中，并通过构建运动模型来约束轨迹。另一种常用的全局优化策略是将MOT任务建模为一个图模型，其中每个顶点表示一个检测目标，顶点间的边表示目标间的相似性，然后通过匈牙利算法或贪婪算法确定各顶点的匹配关系。基于图模型的方法有网络流(Network Flow，NF)、条件随机场(CRF)、最小代价子图多切(Minimum Cost Subgraph Multicut，MC SM)和最大加权独立集(Maximum-Weight Independent Set，MWIS)等。&lt;/p&gt;
&lt;p&gt;由于在跟踪过程中可利用更多帧图像的信息，离线方法通常比在线方法具有更高的跟踪准确性和鲁棒性，但其计算量开销更高且实际应用范围相比在线方法较小。&lt;/p&gt;
&lt;h5 id=&#34;在线跟踪算法&#34;&gt;&lt;strong&gt;在线跟踪算法&lt;/strong&gt;&lt;/h5&gt;
&lt;p&gt;由于在线跟踪方法具有不依靠未来信息的特点，更契合实际需求，因此在线的跟踪算法成为如今的研究主流。在线跟踪方法通常按时间顺序逐帧关联目标，因此在线跟踪也被称为顺序跟踪。当前的在线跟踪方法常基于目标的运动和外观特征关联目标。早期的研究主要通过构建运动模型，基于目标的运动特征来跟踪目标。随后，受益于神经网络强大的特征提取能力，基于外观特征的跟踪算法吸引了广泛的关注。而为了进一步提升算法在各种复杂的场景下的跟踪准确性，结合运动和外观特征的MOT算法成为了当今的研究热点。&lt;/p&gt;
&lt;p&gt;可以分为三种（做一个图，后面跟上这些方法的优缺点）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基于运动特征的方法
&lt;ul&gt;
&lt;li&gt;优点：有效应对短时间的遮挡且缓解了相似目标对模型的干扰&lt;/li&gt;
&lt;li&gt;缺点：由于外观特征的缺失，跟踪性能衰退明显&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;基于外观特征的方法
&lt;ul&gt;
&lt;li&gt;优点：跟踪能力更强，对目标尺度变换的鲁棒性更高&lt;/li&gt;
&lt;li&gt;缺点：有相似目标干扰的场景下容易发生跟踪框漂移等错误&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;结合运动和外观特征的方法
&lt;ul&gt;
&lt;li&gt;优点：跟踪准确性较高，应对复杂场景下的各种挑战具有更强的鲁棒性&lt;/li&gt;
&lt;li&gt;缺点：网络复杂度较高且计算量相对较大，跟踪速度较慢，难以达到实时跟踪的要求&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;基于jdejoint-detection-and-embedding范式的方法&#34;&gt;基于JDE(&lt;em&gt;Joint Detection and Embedding&lt;/em&gt;)范式的方法&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;SDE的方法在跟踪过程中先后推理了目标检测和特征提取两个计算量较大的深度网络，这种高昂的计算开销限制了模型的跟踪速度，通过使目标检测和特征提取两个关键任务共享大量特征，即将两个任务融合到一个网格中去，JDE范式可以显著减少算法的计算量。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;优化的具体三点&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;联合检测和嵌入
JDE采用联合检测和嵌入的方式，通过一个统一的深度学习模型，同时执行目标检测和目标嵌入。&lt;/li&gt;
&lt;li&gt;JDE基于深度卷积神经网络（CNN），包含目标检测分支和目标嵌入分支，两者共享底层卷积层，以促使特征提取得到充分共享和协同训练。&lt;/li&gt;
&lt;li&gt;训练时采用联合训练策略，同时优化目标检测分支和目标嵌入分支的损失函数。损失函数包括目标检测的定位损失、分类损失，以及目标嵌入的三元损失等，平衡了目标检测和嵌入学习两个任务。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;基于jdtjoint-detectionand-tracking范式的方法&#34;&gt;基于JDT(&lt;em&gt;Joint Detectionand Tracking&lt;/em&gt;)范式的方法&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;联合检测和跟踪在单个网格中完成三个子任务进行算法优化
当前JDT范式的算法主要分为基于孪生网路的方法和Transformer的方法&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;基于孪生网络的方法&#34;&gt;&lt;strong&gt;基于孪生网络的方法&lt;/strong&gt;&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;基本原理：孪生网络是标准CNN的一种变体。如图所示，基于孪生网络的方法通过两个共享权重的卷积层提取不同视频帧图像中目标的特征，结合不同图像信息学习目标更具判别性的特征。
&lt;!-- 图--&gt;
&lt;/li&gt;
&lt;li&gt;训练过程: 在训练孪生网络时，通常使用孪生三元损失（Siamese Triplet Loss）来优化网络参数。损失函数包括一个锚定样本、一个正样本和一个负样本，通过最小化锚定样本与正样本的距离同时最大化锚定样本与负样本的距离，使得相似的目标在嵌入空间中更加接近。&lt;/li&gt;
&lt;li&gt;目标跟踪过程：在跟踪时，通过比较当前帧目标图像和前一帧目标图像的特征表示相似性，判断目标是否相同。一些孪生网络方法还采用在线学习的策略，通过不断地更新孪生网络的权重，适应目标外观的变化，提高跟踪的鲁棒性。&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;transformer方法&#34;&gt;&lt;strong&gt;Transformer方法&lt;/strong&gt;&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;基本原理:Transformer是一种基于自注意力机制的神经网络结构，广泛应用于序列建模任务。在目标跟踪中，可以将目标的位置信息作为序列输入，并使用Transformer模型来捕捉目标之间的关系。&lt;/li&gt;
&lt;li&gt;自注意力机制：Transformer使用自注意力机制来动态地捕获输入序列中各元素之间的关系，使得模型能够关注不同位置的信息，这其中的输入为目标的位置信息和特征，将二者嵌入组成序列。&lt;/li&gt;
&lt;li&gt;目标跟踪过程：Transformer可以输出每个目标的位置信息以及其他可能的特征，通过比较输出信息的相似性进行目标匹配，能够更好地处理目标之间的复杂关系和变化&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;h3 id=&#34;目标追踪方法&#34;&gt;&lt;em&gt;目标追踪方法&lt;/em&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;h2 id=&#34;论文复现&#34;&gt;论文复现&lt;/h2&gt;
&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;
&lt;p&gt;近年来，基于深度学习的MOT技术迅速发展，模型的跟踪性能取得了显著的提升，目前已有越来越多的技术被应用到MOT任务上，但目前还有许多值得探索的研究方向。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;无监督MOT：当前的MOT算法大多是基于监督学习，然而MOT数据集的标注需要逐帧寻找不同图像间的相同目标，需花费巨大的时间和经济成本。设计基于无监督学习的MOT算法有助于减少人工标注数据的开销，然而由于缺乏对跟踪目标的先验知识，无监督MOT任务具有很大的挑战性。&lt;/li&gt;
&lt;li&gt;目标间交互关系：通过对多个目标间的交互关系建模，可增强拥挤场景下模型对各目标的判别能力，然而当前算法对于目标间交互关系的探索依然较少。在今后的研究工作中，可采用Transformer或图神经网络对目标间的交互关系进行建模，从而进一步提升MOT算法在高峰时段的地铁站和节假日的旅游景点等极端拥挤场景下的跟踪鲁棒性。&lt;/li&gt;
&lt;li&gt;跟踪促进检测：当前的MOT算法跟踪性能依赖于检测算法，然而目前的MOT算法通常单独执行检测算法，并未探索目标在先前时刻的信息。充分利用目标的时空信息，将目标在过去时刻的运动和外观等特征传递到当前帧，有助于提升模型在执行交通车辆跟踪和赛场运动员行为分析等存在大量遮挡和运动模糊的跟踪任务时的跟踪性能。&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>Wonder3D项目环境配置和运行</title>
        <link>https://ZHY2019302848.github.io/p/wonder3d%E9%A1%B9%E7%9B%AE%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%92%8C%E8%BF%90%E8%A1%8C/</link>
        <pubDate>Wed, 15 Nov 2023 19:37:07 +0800</pubDate>
        
        <guid>https://ZHY2019302848.github.io/p/wonder3d%E9%A1%B9%E7%9B%AE%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%92%8C%E8%BF%90%E8%A1%8C/</guid>
        <description>&lt;img src="https://ZHY2019302848.github.io/p/wonder3d%E9%A1%B9%E7%9B%AE%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%92%8C%E8%BF%90%E8%A1%8C/fig_teaser.png" alt="Featured image of post Wonder3D项目环境配置和运行" /&gt;&lt;h1 id=&#34;wonder3d环境配置&#34;&gt;Wonder3D环境配置&lt;/h1&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/xxlong0/Wonder3D&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;项目仓库&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://arxiv.org/abs/2310.15008&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;项目论文&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;准备系统环境&#34;&gt;准备系统环境&lt;/h2&gt;
&lt;p&gt;系统为&lt;strong&gt;ubuntu18.04&lt;/strong&gt;以上系统，&lt;strong&gt;anaconda&lt;/strong&gt;环境装好，&lt;strong&gt;cuda&lt;/strong&gt;版本为11.8或11.7，测试用12.2会报错，&lt;strong&gt;gcc&lt;/strong&gt;版本8以上，&lt;strong&gt;python&lt;/strong&gt;3.8以上，显卡确保&lt;strong&gt;显存&lt;/strong&gt;足够，我先后在2080ti和titan显卡上均测试过，cuda版本为11.3和11.2，都会报cuda和pytorch版本不匹配的错，最后在4090上成功运行，所以一个准确合适的环境是重要前提。&lt;/p&gt;
&lt;h2 id=&#34;安装环境&#34;&gt;安装环境&lt;/h2&gt;
&lt;p&gt;只要上一步系统环境准备完好，接下来依照官方教程即可&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;conda create -n wonder3d &lt;span class=&#34;nv&#34;&gt;python&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;3.10 &lt;span class=&#34;c1&#34;&gt;#这里用3.10是怕再有奇怪的报错，所以把版本调高&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;conda activate wonder3d
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这两步结束后，先查看python和pip的路径是conda虚拟环境，用&lt;code&gt;which python&lt;/code&gt;和&lt;code&gt;which pip&lt;/code&gt;查询，如果返回时虚拟环境的路径，可以跳过这一步骤，如果不是
，显示为local路径，可以先退出现在的base环境，然后在换回来wonder3d环境&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;conda deactivate &lt;span class=&#34;c1&#34;&gt;#退出wonder3d&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;conda deactivate &lt;span class=&#34;c1&#34;&gt;#退出base&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;conda activate wonder3d &lt;span class=&#34;c1&#34;&gt;#重新激活环境&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;下面是项目下载和必要环境的安装&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/xxlong0/Wonder3D #这里如果速度慢可以参考上一篇&lt;span class=&#34;s2&#34;&gt;&amp;#34;服务器网络问题解决方案&amp;#34;&lt;/span&gt;，但这个只能用于大学教研室或是公司本地服务器
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;cd&lt;/span&gt; Wonder3D
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install -r requirements.txt #这要下很久，可以去泡杯茶
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install git+https://github.com/NVlabs/tiny-cuda-nn/#subdirectory=bindings/torch #这里很容易出问题，大部分问题都可以在&lt;span class=&#34;s2&#34;&gt;&amp;#34;准备系统环境&amp;#34;&lt;/span&gt;中解决
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;安装完后看一下自己torch是否安装成功&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;torch&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;torch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;__verison__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#查看版本号是否对应后退出即可&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;运行项目&#34;&gt;运行项目&lt;/h2&gt;
&lt;p&gt;先下载&lt;a class=&#34;link&#34; href=&#34;https://connecthkuhk-my.sharepoint.com/personal/xxlong_connect_hku_hk/_layouts/15/onedrive.aspx?id=%2Fpersonal%2Fxxlong%5Fconnect%5Fhku%5Fhk%2FDocuments%2Fwonder3d%2Fpretrained%2Dweights%2Fckpts&amp;amp;ga=1&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;checkpoint&lt;/a&gt;文件复制到指定目录下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Wonder3D
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;|-- ckpts
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    |-- unet
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    |-- scheduler.bin
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    ...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;之后可以直接运行命令看一下效果，代码会默认跑一只猫头鹰&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;bash run_test.sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;同理，此处出现错误请返回&lt;em&gt;系统环境&lt;/em&gt;和&lt;em&gt;安装环境&lt;/em&gt;这两个步骤查看是否出错，如果按照错误提示打补丁很可能越补窟窿越大
运行完成后可以在&lt;code&gt;./outputs&lt;/code&gt;下查找相关文件，应该6个一一对应的法线图和色彩图&lt;/p&gt;
&lt;p&gt;之后生成mesh obj文件，这里我只试了官方的第一种方法&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ./instant-nsr-pl
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;bash run.sh output_folder_path scene_name
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#第二条命令示例为:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;bash run.sh  ../outputs/cropsize-192-cfg3.0 owl
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;生成完成后可以用&lt;code&gt;ls&lt;/code&gt;命令找哪个文件夹是新生成的说明obj文件就存在哪了&lt;/p&gt;
&lt;p&gt;如果想要替换自己的图片，先把图片的背景去掉，在线网站就可以完成，然后去找&lt;code&gt;/wonder/configs/mvdiffusion-joint-ortho-6views.yaml&lt;/code&gt;，修改如下内容即可
&lt;img src=&#34;https://ZHY2019302848.github.io/p/wonder3d%E9%A1%B9%E7%9B%AE%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%92%8C%E8%BF%90%E8%A1%8C/config.png&#34;
	width=&#34;933&#34;
	height=&#34;776&#34;
	srcset=&#34;https://ZHY2019302848.github.io/p/wonder3d%E9%A1%B9%E7%9B%AE%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%92%8C%E8%BF%90%E8%A1%8C/config_hu680ea5fa53f236b96ac97b11244b0a3f_53960_480x0_resize_box_3.png 480w, https://ZHY2019302848.github.io/p/wonder3d%E9%A1%B9%E7%9B%AE%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%92%8C%E8%BF%90%E8%A1%8C/config_hu680ea5fa53f236b96ac97b11244b0a3f_53960_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;120&#34;
		data-flex-basis=&#34;288px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;尝试其他图片&#34;&gt;尝试其他图片&lt;/h2&gt;
&lt;p&gt;我用该方法尝试了下最近师姐让找的car图片，因为该项目训练时没有车的训练模型，所以图生3D的效果不是十分理想。&lt;/p&gt;
&lt;h3 id=&#34;car1&#34;&gt;car1&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://ZHY2019302848.github.io/p/wonder3d%E9%A1%B9%E7%9B%AE%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%92%8C%E8%BF%90%E8%A1%8C/car1.png&#34;
	width=&#34;666&#34;
	height=&#34;375&#34;
	srcset=&#34;https://ZHY2019302848.github.io/p/wonder3d%E9%A1%B9%E7%9B%AE%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%92%8C%E8%BF%90%E8%A1%8C/car1_hua33df5c553c5de33c17b0e9beeec6816_122583_480x0_resize_box_3.png 480w, https://ZHY2019302848.github.io/p/wonder3d%E9%A1%B9%E7%9B%AE%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%92%8C%E8%BF%90%E8%A1%8C/car1_hua33df5c553c5de33c17b0e9beeec6816_122583_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;原车&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;img src=&#34;https://ZHY2019302848.github.io/p/wonder3d%E9%A1%B9%E7%9B%AE%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%92%8C%E8%BF%90%E8%A1%8C/car1mesh.png&#34;
	width=&#34;697&#34;
	height=&#34;420&#34;
	srcset=&#34;https://ZHY2019302848.github.io/p/wonder3d%E9%A1%B9%E7%9B%AE%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%92%8C%E8%BF%90%E8%A1%8C/car1mesh_hu7f4f862421abf55d2bf8e16b8a1e20ef_133668_480x0_resize_box_3.png 480w, https://ZHY2019302848.github.io/p/wonder3d%E9%A1%B9%E7%9B%AE%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%92%8C%E8%BF%90%E8%A1%8C/car1mesh_hu7f4f862421abf55d2bf8e16b8a1e20ef_133668_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;生成mesh&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;165&#34;
		data-flex-basis=&#34;398px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;car2&#34;&gt;car2&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://ZHY2019302848.github.io/p/wonder3d%E9%A1%B9%E7%9B%AE%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%92%8C%E8%BF%90%E8%A1%8C/car2.png&#34;
	width=&#34;666&#34;
	height=&#34;375&#34;
	srcset=&#34;https://ZHY2019302848.github.io/p/wonder3d%E9%A1%B9%E7%9B%AE%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%92%8C%E8%BF%90%E8%A1%8C/car2_hu0a7c5d1860557a59974962ad216667a4_221663_480x0_resize_box_3.png 480w, https://ZHY2019302848.github.io/p/wonder3d%E9%A1%B9%E7%9B%AE%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%92%8C%E8%BF%90%E8%A1%8C/car2_hu0a7c5d1860557a59974962ad216667a4_221663_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;原车&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;img src=&#34;https://ZHY2019302848.github.io/p/wonder3d%E9%A1%B9%E7%9B%AE%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%92%8C%E8%BF%90%E8%A1%8C/car2mesh.png&#34;
	width=&#34;658&#34;
	height=&#34;487&#34;
	srcset=&#34;https://ZHY2019302848.github.io/p/wonder3d%E9%A1%B9%E7%9B%AE%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%92%8C%E8%BF%90%E8%A1%8C/car2mesh_hube032fac02885aef4f25710d86981094_183729_480x0_resize_box_3.png 480w, https://ZHY2019302848.github.io/p/wonder3d%E9%A1%B9%E7%9B%AE%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%92%8C%E8%BF%90%E8%A1%8C/car2mesh_hube032fac02885aef4f25710d86981094_183729_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;生成mesh&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;135&#34;
		data-flex-basis=&#34;324px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;car3&#34;&gt;car3&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://ZHY2019302848.github.io/p/wonder3d%E9%A1%B9%E7%9B%AE%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%92%8C%E8%BF%90%E8%A1%8C/car3.png&#34;
	width=&#34;667&#34;
	height=&#34;374&#34;
	srcset=&#34;https://ZHY2019302848.github.io/p/wonder3d%E9%A1%B9%E7%9B%AE%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%92%8C%E8%BF%90%E8%A1%8C/car3_hu1a9eed947bd6821309cee077ec571e3e_130067_480x0_resize_box_3.png 480w, https://ZHY2019302848.github.io/p/wonder3d%E9%A1%B9%E7%9B%AE%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%92%8C%E8%BF%90%E8%A1%8C/car3_hu1a9eed947bd6821309cee077ec571e3e_130067_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;原车&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;178&#34;
		data-flex-basis=&#34;428px&#34;
	
&gt;&lt;img src=&#34;https://ZHY2019302848.github.io/p/wonder3d%E9%A1%B9%E7%9B%AE%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%92%8C%E8%BF%90%E8%A1%8C/car3mesh.png&#34;
	width=&#34;664&#34;
	height=&#34;519&#34;
	srcset=&#34;https://ZHY2019302848.github.io/p/wonder3d%E9%A1%B9%E7%9B%AE%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%92%8C%E8%BF%90%E8%A1%8C/car3mesh_hu5f95e2064f5cf6dd25d7a4e0df34aee3_149793_480x0_resize_box_3.png 480w, https://ZHY2019302848.github.io/p/wonder3d%E9%A1%B9%E7%9B%AE%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%92%8C%E8%BF%90%E8%A1%8C/car3mesh_hu5f95e2064f5cf6dd25d7a4e0df34aee3_149793_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;生成mesh&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;127&#34;
		data-flex-basis=&#34;307px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;
&lt;p&gt;锻炼了自己的环境配置功力，还有在项目介绍看到可以使用正交相机来完成对obj色彩的显示，原文如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Our generated normals and color images are defined in orthographic views, so the reconstructed mesh is also in orthographic camera space. If you use MeshLab to view the meshes&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个可以帮到我最近在研究的对对房屋mesh涂上迷彩的问题。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>服务器网络问题解决方案</title>
        <link>https://ZHY2019302848.github.io/p/linux-network/</link>
        <pubDate>Fri, 10 Nov 2023 15:34:23 +0800</pubDate>
        
        <guid>https://ZHY2019302848.github.io/p/linux-network/</guid>
        <description>&lt;img src="https://ZHY2019302848.github.io/p/linux-network/linux_network.jpg" alt="Featured image of post 服务器网络问题解决方案" /&gt;&lt;h1 id=&#34;对服务器网络问题的总结&#34;&gt;对服务器网络问题的总结&lt;/h1&gt;
&lt;p&gt;最近使用实验室linux服务器跑代码，对其中频繁出现的网络问题烦不胜烦，诸如git和pip问题层出不穷，其中的问题不是简单换一个清华源可以，根源性需要让服务器走&lt;strong&gt;中转代理&lt;/strong&gt;，实现完全性&lt;strong&gt;翻墙&lt;/strong&gt;（该方法仅对内网有用）。&lt;/p&gt;
&lt;p&gt;现在把其中常见的命令总结如下，方便以后快捷使用。&lt;/p&gt;
&lt;h2 id=&#34;git的代理设置&#34;&gt;git的代理设置&lt;/h2&gt;
&lt;p&gt;先对&lt;strong&gt;clash&lt;/strong&gt;进行设置&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ZHY2019302848.github.io/p/linux-network/clash.png&#34;
	width=&#34;770&#34;
	height=&#34;677&#34;
	srcset=&#34;https://ZHY2019302848.github.io/p/linux-network/clash_hu3ce7ad28e4fc38188a76b4b5240a45b7_33097_480x0_resize_box_3.png 480w, https://ZHY2019302848.github.io/p/linux-network/clash_hu3ce7ad28e4fc38188a76b4b5240a45b7_33097_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;clash设置&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;113&#34;
		data-flex-basis=&#34;272px&#34;
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global http.proxy socks5 127.0.0.1:7890 &lt;span class=&#34;c1&#34;&gt;#端口号参考clash&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global https.proxy socks5 127.0.0.1:7890 &lt;span class=&#34;c1&#34;&gt;#端口前面的ip地址参考开clash的主机ip&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global https.proxy 127.0.0.1:7890
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global https.proxy 127.0.0.1:7890  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;如果报错提示不让写入修改，在最后加入&lt;code&gt;--replace-all&lt;/code&gt;，代码如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global https.proxy 127.0.0.1:7890 --replace-all
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global https.proxy 127.0.0.1:7890 --replace-all
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;服务器全局设置&#34;&gt;服务器全局设置&lt;/h2&gt;
&lt;p&gt;考虑到有些工具无法设置代理，所以使用全局代理，但这种方式在针对ICMP协议时会失效，因为使用的代理走的都是会话层，无法影响到ip报文解包的结果。&lt;/p&gt;
&lt;p&gt;代码如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;proxy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;http://127.0.0.1:7890&amp;#34;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;##ip和端口地址按情况替换&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;https_proxy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$proxy&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;http_proxy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$proxy&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;效果&#34;&gt;效果&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://ZHY2019302848.github.io/p/linux-network/torch.jpg&#34;
	width=&#34;849&#34;
	height=&#34;115&#34;
	srcset=&#34;https://ZHY2019302848.github.io/p/linux-network/torch_hu19b45d11bcb71afec5fc85c9b1d72085_21733_480x0_resize_q75_box.jpg 480w, https://ZHY2019302848.github.io/p/linux-network/torch_hu19b45d11bcb71afec5fc85c9b1d72085_21733_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;738&#34;
		data-flex-basis=&#34;1771px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;可以让torch的安装速度从几百k涨到最高10mb/s。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;备注&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;如果无法正常部署博客到github.io，请检查标题里是不是把草稿draft设置为了true，之后再运行如下命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo --gc --minify --cleanDestinationDir
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>归档</title>
        <link>https://ZHY2019302848.github.io/archives/</link>
        <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
        
        <guid>https://ZHY2019302848.github.io/archives/</guid>
        <description></description>
        </item>
        <item>
        <title>关于</title>
        <link>https://ZHY2019302848.github.io/%E5%85%B3%E4%BA%8E/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://ZHY2019302848.github.io/%E5%85%B3%E4%BA%8E/</guid>
        <description>&lt;p&gt;I am a strom.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>链接</title>
        <link>https://ZHY2019302848.github.io/%E9%93%BE%E6%8E%A5/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://ZHY2019302848.github.io/%E9%93%BE%E6%8E%A5/</guid>
        <description></description>
        </item>
        <item>
        <title>搜索</title>
        <link>https://ZHY2019302848.github.io/search/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://ZHY2019302848.github.io/search/</guid>
        <description></description>
        </item>
        
    </channel>
</rss>
