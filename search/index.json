[{"content":"对服务器网络问题的总结 最近使用实验室linux服务器跑代码，对其中频繁出现的网络问题烦不胜烦，诸如git和pip问题层出不穷，其中的问题不是简单换一个清华源可以，根源性需要让服务器走中转代理，实现完全性翻墙。\n现在把其中常见的命令总结如下，方便以后快捷使用。\ngit的代理设置 1 2 3 4 5 6 git config --global http.proxy socks5 127.0.0.1:7890 #端口号参考clash git config --global https.proxy socks5 127.0.0.1:7890 #端口前面的ip地址参考开clash的主机ip git config --global https.proxy 127.0.0.1:7890 git config --global https.proxy 127.0.0.1:7890 如果报错提示不让写入修改，在最后加入--replace-all，代码如下\n1 2 git config --global https.proxy 127.0.0.1:7890 --replace-all git config --global https.proxy 127.0.0.1:7890 --replace-all 服务器全局设置 考虑到有些工具无法设置代理，所以使用全局代理，但这种方式在针对ICMP协议时会失效，因为使用的代理走的都是会话层，无法影响到ip报文解包的结果。\n代码如下\n1 2 3 export proxy=\u0026#34;http://127.0.0.1:7890\u0026#34; ##ip和端口地址按情况替换 export https_proxy=$proxy export http_proxy=$proxy 效果 可以让torch的安装速度从几百k到10mb/s。\n备注\n如果无法正常部署博客到github.io，请检查标题里是不是把草稿draft设置为了true，之后再运行如下命令\n1 2 hugo hugo --gc --minify --cleanDestinationDir ","date":"2023-11-10T15:34:23+08:00","image":"https://ZHY2019302848.github.io/p/first/test_hud7e36f7e20e71be184458283bdae4646_55974_120x120_fill_q75_box_smart1.jpg","permalink":"https://ZHY2019302848.github.io/p/first/","title":"First"}]